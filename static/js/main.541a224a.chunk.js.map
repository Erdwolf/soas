{"version":3,"sources":["App.js","serviceWorker.js","index.js","App.module.css","textile.png"],"names":["useTrigger","useState","timesTriggered","setTimesTriggered","App","number","setNumber","easy","medium","hard","difficulties","setDifficulties","setDifficulty","name","value","updated","filter","length","trigger","animalsOfDesiredDifficulties","animals","difficulty","pairs","zip","sampleSize","flowers","className","style","textileBackground","heading","href","target","rel","type","onClick","title","min","max","onChange","e","currentTarget","checked","table","map","flower","animal","pair","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.541a224a.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport sampleSize from 'lodash/sampleSize'\nimport zip from 'lodash/zip'\nimport filter from 'lodash/filter'\n\nimport style from './App.module.css';\n\nimport flowers from './data/flowers.json';\nimport animals from './data/animals.json';\nimport textileBackground from './textile.png';\n\n\n/** A custom hook to trigger a re-render. */\nconst useTrigger = () => {\n  const [timesTriggered, setTimesTriggered] = useState(0)\n  return () => setTimesTriggered(timesTriggered + 1)\n}\n\nfunction App() {\n  const [number, setNumber] = useState(3)\n  const [difficulties, setDifficulties] = useState({\n    easy: true,\n    medium: true,\n    hard: true\n  })\n\n  function setDifficulty(name, value) {\n    const updated = {...difficulties, [name]: value }\n    if (0 === filter(updated).length) {\n      // If none are selected, reset all\n      return setDifficulties({\n        easy: true,\n        medium: true,\n        hard: true\n      })\n    }\n    return setDifficulties(updated)\n  }\n\n  const trigger = useTrigger()\n\n  const animalsOfDesiredDifficulties =\n    filter(animals, ({difficulty}) => difficulties[difficulty])\n\n  const pairs = zip(\n    sampleSize(flowers, number),\n    sampleSize(animalsOfDesiredDifficulties, number)\n  )\n  //const m = Object.fromEntries(pairs)\n  //console.log(flowers.map(f => m[f] ? `${f[0]}${m[f].number}` : '').join(''))\n  //console.log(flowers.map(f => m[f] ? `${'0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'[m[f].number]}` : '-').join(''))\n\n  return (\n    <div\n      className={style.App}\n      style={{'background-image': `url(${textileBackground})`}}\n      >\n        <h1 className={style.heading}>\n          Animal &amp; flower card setup for <a\n            href=\"https://boardgamegeek.com/boardgame/276280/spring-string\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Spring on a String\n          </a>\n        </h1>\n        <button\n            type=\"button\"\n            onClick={trigger}\n          >\n            Randomize!\n        </button>\n        <div>\n          <input type=\"number\" title=\"Number of animals\" min=\"1\" max=\"5\" value={number}\n                 onChange={e => setNumber(e.currentTarget.value)} />\n          <input type=\"checkbox\" title=\"Include easy\"   checked={difficulties.easy}\n                 onChange={e => setDifficulty('easy', e.currentTarget.checked)} />\n          <input type=\"checkbox\" title=\"Include medium\" checked={difficulties.medium}\n                 onChange={e => setDifficulty('medium', e.currentTarget.checked)} />\n          <input type=\"checkbox\" title=\"Include hard\"   checked={difficulties.hard}\n                 onChange={e => setDifficulty('hard', e.currentTarget.checked)} />\n        </div>\n        <div className={style.table}>\n          {pairs.map(([flower, animal]) =>\n            <div className={style.pair}>\n              <span className={style.flower}>{flower}</span>\n              <span className={style.animal}>{animal.name} ({animal.difficulty})</span>\n            </div>\n          )}\n        </div>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"heading\":\"App_heading__2nYdz\",\"table\":\"App_table__2Wm0g\",\"pair\":\"App_pair__3wwJ-\",\"animal\":\"App_animal__jML_Q\",\"flower\":\"App_flower__3hr6C\"};","module.exports = __webpack_public_path__ + \"static/media/textile.50b3032b.png\";"],"sourceRoot":""}